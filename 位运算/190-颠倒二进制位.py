"""
颠倒给定的 32 位无符号整数的二进制位。

示例 1：

输入: 00000010100101000001111010011100
输出: 00111001011110000010100101000000
解释: 输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
      因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
示例 2：

输入：11111111111111111111111111111101
输出：10111111111111111111111111111111
解释：输入的二进制串 11111111111111111111111111111101 表示无符号整数 4294967293，
      因此返回 3221225471 其二进制表示形式为 10101111110010110010011101101001。
"""


class Solution:
    """
    从最低位到最高位逐位检查n的第i位是不是为1. 如果是, 就把（31-i）位设为1
    """
    def reverseBits(self, n):
        ans, MASK = 0, 1
        for i in range(32):
            if n & MASK:
                ans |= 1 << (31 - i)
            MASK <<= 1
        return ans
